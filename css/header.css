.header {
  display: flex; /* Um ao lado do outro */
  justify-content: space-between; /* Espaçar a marca dos links do menu, um num canto e outro no outro canto */
  max-width: 1200px; /* Largura total do nosso site, para telas muito grandes não deixarem um espaço enorme em branco no espaçamento do justify-content */
  margin: 0 auto; /* Centralizar nosso site conforme responsividade, pra cima e pra baixo de 0, pro lado e pro outro de auto */
  align-items: center; /* Alinhar todos os itens ao centro da linha que ocupam */
  padding: 40px 20px; /* Bordinhas. Precisamos trabalhar com padding e não margin pois queremos que a cor pegue em tudinho caso decidirmos uma cor de background para esse header, se fosse margin, os cantos ficariam brancos. */
}

.header-menu {
  display: flex; /* Itens do menu um ao lado do outro, a UL precisa estar definida com uma classe pra funcionar! ex. header-menu */
  flex-wrap: wrap; /*Para o menu ser responsivo e quebrar quando o usuário for diminuir a tela mais do que ele aguenta */
  gap: 10px; /* Separar os itens, pois estão todos grudadinhos */
  justify-content: center; /* Isso foi colocado após fazermos o @media, onde o menu não ficava ao centro na hora da quebra */
}

.header-menu a {
  font-size: 1.125rem; /* 18 por 16 (pixel) = 1.125 */
  line-height: 1.3;
  padding: 10px 20px; /* Aumentar a área de click pro usuário mobile */
  text-decoration: none;
  color: #141414;
  display: block; /* Temos que colocar pois se não, não irá pegar corretamente os valores de padding que fornecemos */
}

@media (max-width: 800px) {
  .header {
    flex-direction: column; /* Ao quebrar errado em menos de 800px, ajustamos o menu e a marca em coluna pro design ficar lindo */
    gap: 40px;
    padding: 20px; /* Diminuiremos o padding padrão pois 40px fica meio grande nessa personalização */
  }

  .header a {
    background: #f5f5f5; /* Transformar em botãozinho */
    border-radius: 4px; /* Arredondar */
  }
}
